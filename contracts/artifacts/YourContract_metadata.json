{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "CounterReset",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "greetingSetter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "newGreeting",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "premium",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "GreetingChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "number",
						"type": "uint256"
					}
				],
				"name": "NumberUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "greeting",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "premium",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resetCounter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_newGreeting",
						"type": "string"
					}
				],
				"name": "setGreeting",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_number",
						"type": "uint256"
					}
				],
				"name": "storeNumber",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userGreetingCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userNumbers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "BuidlGuidl",
			"kind": "dev",
			"methods": {
				"setGreeting(string)": {
					"params": {
						"_newGreeting": "(string memory) - new greeting to save on the contract"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"setGreeting(string)": {
					"notice": "Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters"
				},
				"userNumbers(address)": {
					"notice": "mapping(address => uint) public lastActive; function updateActivity() public { lastActive[msg.sender] = block.timestamp; } function getLastActive(address user) public view returns (uint) { return lastActive[user]; }"
				},
				"withdraw()": {
					"notice": "Function that allows the owner to withdraw all the Ether in the contract The function can only be called by the owner of the contract as defined by the isOwner modifier"
				}
			},
			"notice": "A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/YourContract.sol": "YourContract"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/YourContract.sol": {
			"keccak256": "0x419749522f2991c762daf0581094ffc712d0160f8dc958b73c7da3c09f838c63",
			"license": "MIT",
			"urls": [
				"bzz-raw://343deb07efd41a26188bb0953a4e0b5957ede4665d9abb7c7b38a1e739da3b29",
				"dweb:/ipfs/QmcSgXtJvB2YKPeUSHRMVcnebutytt38EEbg8hEZ51E75Q"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}